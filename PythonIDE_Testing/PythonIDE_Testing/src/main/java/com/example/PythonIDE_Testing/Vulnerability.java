package com.example.PythonIDE_Testing;

//used to represent a vulnerability, based on output from bandit, which looks like:
//Bandit analysis completed successfully.
//Run started:2025-03-23 12:37:51.831563
//Files in scope (1):
//        /tmp/script.py (score: {SEVERITY: 5, CONFIDENCE: 3})
//Files excluded (0):
//
//Test results:
//>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
//
//--------------------------------------------------
//
//Code scanned:
//        Total lines of code: 12
//        Total lines skipped (#nosec): 0
//        Total potential issues skipped due to specifically being disabled (e.g., #nosec BXXX): 0
//
//Run metrics:
//        Total issues (by severity):
//                Undefined: 0
//                Low: 0
//                Medium: 1
//                High: 0
//        Total issues (by confidence):
//                Undefined: 0
//                Low: 1
//                Medium: 0
//                High: 0
//Files skipped (0):
//[Description:  Possible SQL injection vector through string-based query construction.
//Severity:  Medium
//CWE: 89
//Code Snippet: /tmp/script.py:10:16
//9               # Format the SQL query with the provided username and password
//10              query = f"SELECT * FROM users WHERE username = '{username}' AND password = '{password}'"
//11              self.cursor.execute(query)
//
//More Info:  https://bandit.readthedocs.io/en/1.8.2/plugins/b608_hardcoded_sql_expressions.html
//   ]


public class Vulnerability extends Issue {
    private String description; //description of the vulnerability
    private String severity; //low, medium, high
    private int CWE; //CWE number, based on the Common Weakness Enumeration list
    private String codeSnippet; //lines of code that contain the vulnerability
    private String moreInfo; //bandit link to a description

    public Vulnerability(String description, String severity, int CWE, String codeSnippet, String moreInfo) {
        this.description = description;
        this.severity = severity;
        this.CWE = CWE;
        this.codeSnippet = codeSnippet;
        this.moreInfo = moreInfo;
    }

    public String getDescription() {
        return description;
    }

    public String getSeverity() {
        return severity;
    }

    public int getCWE() {
        return CWE;
    }

    public String getCodeSnippet() {
        return codeSnippet;
    }

    public String getMoreInfo() {
        return moreInfo;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public void setSeverity(String severity) {
        this.severity = severity;
    }

    public void setCWE(int CWE) {
        this.CWE = CWE;
    }

    public void setCodeSnippet(String codeSnippet) {
        this.codeSnippet = codeSnippet;
    }

    public void setMoreInfo(String moreInfo) {
        this.moreInfo = moreInfo;
    }

    public String toString() {
        return "Description: " + description + "\nSeverity: " + severity + "\nCWE: " + CWE + "\nCode Snippet: " + codeSnippet + "\nMore Info: " + moreInfo;
    }

    public String toStringWithHLink() {
        System.out.println(getCodeSnippet());
        return "Description: " + description + "\nSeverity: " + severity + "\nCWE: " + CWE + "\nCode Snippet: " + codeSnippet + "\n" + "<a href=\"" + moreInfo + "\" target=\"_blank\">" + "more info" + "</a>";

    }

}